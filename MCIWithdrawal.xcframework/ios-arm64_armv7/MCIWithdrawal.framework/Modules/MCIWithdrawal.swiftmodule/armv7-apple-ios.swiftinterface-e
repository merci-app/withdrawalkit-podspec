// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.1 (swiftlang-1200.0.41 clang-1200.0.32.8)
// swift-module-flags: -target armv7-apple-ios10.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name MCIWithdrawal
import Alamofire
import Foundation
import Kingfisher
import MCICheckoutCore
import MCIFoundation
import MCIIssuerViewerCore
import MCIKit
import MCILogger
@_exported import MCIWithdrawal
import Swift
import UIKit
public struct MCIWithdrawal : WithdrawalInjectable {
  public init()
  public func present(_ controller: UIKit.UIViewController, transition: UIKit.UIModalTransitionStyle, completion: (() -> Swift.Void)?)
  public func enableSupport(enabled: Swift.Bool)
  public func configureDelegate(delegate: WithdrawalInjectableDelegate)
}
@_hasMissingDesignatedInitializers final public class WithdrawConfig {
  public static let shared: WithdrawConfig
  final public var isSDK: Swift.Bool
  final public var delegate: WithdrawalInjectableDelegate?
  final public var shouldShowOnboarding: Swift.Bool
  final public var imageBanner: UIKit.UIImage?
  final public var imageOnboardingFirst: UIKit.UIImage?
  final public var imageOnboardingSecond: UIKit.UIImage?
  final public var imageOnboardingThird: UIKit.UIImage?
  @objc deinit
}
extension UIStoryboard {
  public class var withdrawal: UIKit.UIStoryboard {
    get
  }
}
@objc @_inheritsConvenienceInitializers final public class WithdrawValueVC : MCITableViewController, Identifiable {
  @objc override final public func viewDidLoad()
  @objc override final public func prepare(for segue: UIKit.UIStoryboardSegue, sender: Any?)
  final public func configure(with accounts: [MCIAccount]?)
  @objc deinit
  @objc override dynamic public init(style: UIKit.UITableView.Style)
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
extension WithdrawValueVC : CheckoutDelegate {
  final public func didComplete(with object: Any?)
}
extension Bundle {
  public static let withdrawal: Foundation.Bundle
}
